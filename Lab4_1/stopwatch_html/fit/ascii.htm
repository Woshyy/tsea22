<html><body>
<pre>
 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: stopwatch                           Date:  3- 4-2021, 10:48AM
Device Used: XC9572-7-PC44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
52 /72  ( 72%) 309 /360  ( 86%) 130/144 ( 90%)   38 /72  ( 53%) 18 /34  ( 53%)

** Function Block Resources **

Function    Mcells      FB Inps     Signals     Pterms      IO          
Block       Used/Tot    Used/Tot    Used        Used/Tot    Used/Tot    
FB1           9/18       32/36       32          90/90*      3/ 9
FB2           9/18       33/36       33          81/90       4/ 9
FB3          16/18       35/36       35          74/90       2/ 8
FB4          18/18*      30/36       30          64/90       2/ 8
             -----       -----                   -----       -----     
             52/72      130/144                 309/360     11/34 

* - Resource is exhausted

** Global Control Resources **

Signal 'clk' mapped onto global clock net GCK1.
Global output enable net(s) unused.
Signal 'reset' mapped onto global set/reset net GSR.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :    5           5    |  I/O              :    16      28
Output        :    8           8    |  GCK/IO           :     1       3
Bidirectional :    3           3    |  GTS/IO           :     0       2
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    1           1    |
                 ----        ----
        Total     18          18

** Power Data **

There are 52 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'stopwatch.ise'.
*************************  Summary of Mapped Logic  ************************

** 11 Outputs **

Signal                 Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                   Pts   Inps          No.  Type    Use     Mode Rate State
digit<0>               25    17    FB1_2   1    I/O     O       STD  FAST 
digit<2>               24    27    FB1_8   4    I/O     O       STD  FAST 
digit<4>               16    27    FB1_15  8    I/O     O       STD  FAST 
digit<5>               25    17    FB2_2   35   I/O     O       STD  FAST 
digit<6>               25    17    FB2_8   38   I/O     O       STD  FAST 
digit<3>               20    13    FB2_15  43   I/O     O       STD  FAST 
display<0>             1     2     FB2_17  44   I/O     I/O     STD  FAST RESET
digit<1>               23    13    FB3_5   12   I/O     O       STD  FAST 
display<1>             1     3     FB3_11  18   I/O     I/O     STD  FAST RESET
digit<7>               0     0     FB4_2   24   I/O     O       STD  FAST 
raknar                 1     2     FB4_11  28   I/O     I/O     STD  FAST RESET

** 41 Buried Nodes **

Signal                 Total Total Loc     Pwr  Reg Init
Name                   Pts   Inps          Mode State
$OpTx$FX_DC$65         2     2     FB1_1   STD  
counter_min_1<1>       5     7     FB1_11  STD  RESET
$OpTx$FX_SC$69         1     2     FB1_12  STD  
show<3>/show<3>_D2     8     9     FB1_16  STD  
$OpTx$FX_SC$70         1     2     FB1_17  STD  
show<1>/show<1>_D2     8     9     FB1_18  STD  
muxfrekvens_old        1     1     FB2_1   STD  RESET
visningslage_s         1     1     FB2_11  STD  RESET
hundradelspuls_gammal  1     1     FB2_12  STD  RESET
counter_min_1<0>       3     4     FB2_16  STD  RESET
rco_100_0              4     11    FB2_18  STD  RESET
muxfrekvens_older      1     1     FB3_1   STD  RESET
counter_sec_0<2>       3     6     FB3_2   STD  RESET
counter_sec_0<0>       3     4     FB3_3   STD  RESET
old_nollstallning      1     1     FB3_7   STD  RESET
counter_100_1<2>       3     6     FB3_8   STD  RESET
counter_100_1<0>       3     4     FB3_9   STD  RESET
counter_100_0<2>       3     8     FB3_10  STD  RESET
rco_100_1              4     9     FB3_12  STD  RESET
counter_min_1<2>       4     7     FB3_13  STD  RESET
counter_100_1<3>       4     7     FB3_14  STD  RESET
counter_100_0<3>       4     9     FB3_15  STD  RESET
counter_100_1<1>       5     7     FB3_16  STD  RESET
counter_100_0<1>       6     9     FB3_17  STD  RESET
counter_100_0<0>       6     10    FB3_18  STD  RESET
start_stopp_old        1     1     FB4_1   STD  RESET
counter_sec_1<3>       3     7     FB4_3   STD  RESET
counter_sec_1<0>       3     4     FB4_4   STD  RESET
counter_min_1<3>       3     7     FB4_5   STD  RESET
counter_min_0<2>       3     6     FB4_6   STD  RESET
counter_min_0<0>       3     4     FB4_7   STD  RESET
rco_sec_1              4     9     FB4_8   STD  RESET
rco_sec_0              4     9     FB4_9   STD  RESET
rco_min_0              4     9     FB4_10  STD  RESET
counter_sec_1<2>       4     7     FB4_12  STD  RESET
counter_sec_0<3>       4     7     FB4_13  STD  RESET
counter_min_0<3>       4     7     FB4_14  STD  RESET
counter_sec_1<1>       5     7     FB4_15  STD  RESET
counter_sec_0<1>       5     7     FB4_16  STD  RESET
counter_min_0<1>       5     7     FB4_17  STD  RESET

Signal                 Total Total Loc     Pwr  Reg Init
Name                   Pts   Inps          Mode State
show<2>/show<2>_D2     8     9     FB4_18  STD  

** 7 Inputs **

Signal                 Loc     Pin  Pin     Pin     
Name                           No.  Type    Use     
muxfrekvens            FB1_5   2    I/O     I
clk                    FB1_9   5~   GCK/I/O GCK
nollstallning          FB2_5   36   I/O     I
reset                  FB2_9   39~  GSR/I/O GSR/I
start_stopp            FB3_2   11   I/O     I
hundradelspuls         FB3_15  20   I/O     I
visningslage           FB4_8   26   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X(@)         - Signal used as input (wire-AND input) to the macrocell logic.
               The number of Signals Used may exceed the number of FB Inputs
               Used due to wire-ANDing in the switch matrix.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               32/4
Number of signals used by logic mapping into function block:  32
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
$OpTx$FX_DC$65        2       0   /\3   0     FB1_1         (b)     (b)
digit<0>             25      20<-   0   0     FB1_2   1     I/O     O
(unused)              0       0   /\5   0     FB1_3         (b)     (b)
(unused)              0       0   /\5   0     FB1_4         (b)     (b)
(unused)              0       0   /\5   0     FB1_5   2     I/O     I
(unused)              0       0   /\5   0     FB1_6   3     I/O     (b)
(unused)              0       0   \/5   0     FB1_7         (b)     (b)
digit<2>             24      19<-   0   0     FB1_8   4     I/O     O
(unused)              0       0   /\5   0     FB1_9   5     GCK/I/O GCK
(unused)              0       0   /\5   0     FB1_10        (b)     (b)
counter_min_1<1>      5       4<- /\4   0     FB1_11  6     GCK/I/O (b)
$OpTx$FX_SC$69        1       0   /\4   0     FB1_12        (b)     (b)
(unused)              0       0   \/5   0     FB1_13        (b)     (b)
(unused)              0       0   \/5   0     FB1_14  7     GCK/I/O (b)
digit<4>             16      11<-   0   0     FB1_15  8     I/O     O
show<3>/show<3>_D2    8       4<- /\1   0     FB1_16        (b)     (b)
$OpTx$FX_SC$70        1       0   /\4   0     FB1_17  9     I/O     (b)
show<1>/show<1>_D2    8       3<-   0   0     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: counter_100_0<0>  12: counter_min_0<3>       23: counter_sec_1<2> 
  2: counter_100_0<1>  13: counter_min_1<0>       24: counter_sec_1<3> 
  3: counter_100_0<2>  14: counter_min_1<1>.LFBK  25: display<0>.PIN 
  4: counter_100_0<3>  15: counter_min_1<2>       26: display<1>.PIN 
  5: counter_100_1<0>  16: counter_min_1<3>       27: nollstallning 
  6: counter_100_1<1>  17: counter_sec_0<0>       28: old_nollstallning 
  7: counter_100_1<2>  18: counter_sec_0<1>       29: rco_min_0 
  8: counter_100_1<3>  19: counter_sec_0<2>       30: show<2>/show<2>_D2 
  9: counter_min_0<0>  20: counter_sec_0<3>       31: show<3>/show<3>_D2.LFBK 
 10: counter_min_0<1>  21: counter_sec_1<0>       32: visningslage_s 
 11: counter_min_0<2>  22: counter_sec_1<1>      

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
$OpTx$FX_DC$65       .........................X.....X........ 2       2
digit<0>             XX..XX..XX..XX..XX..XX..XX...XXX........ 17      17
digit<2>             XXXXXXXXXXXXXXXXXXXXXXXXXX.....X........ 27      27
counter_min_1<1>     ............XXXX..........XXX........... 7       7
$OpTx$FX_SC$69       .........................X.....X........ 2       2
digit<4>             XXXXXXXXXXXXXXXXXXXXXXXXXX.....X........ 27      27
show<3>/show<3>_D2   ...X...X...X...X...X...XXX.....X........ 9       9
$OpTx$FX_SC$70       .........................X.....X........ 2       2
show<1>/show<1>_D2   .X...X...X...X...X...X..XX.....X........ 9       9
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               33/3
Number of signals used by logic mapping into function block:  33
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
muxfrekvens_old       1       1<- \/5   0     FB2_1         (b)     (b)
digit<5>             25      20<-   0   0     FB2_2   35    I/O     O
(unused)              0       0   /\5   0     FB2_3         (b)     (b)
(unused)              0       0   /\5   0     FB2_4         (b)     (b)
(unused)              0       0   /\5   0     FB2_5   36    I/O     I
(unused)              0       0   \/5   0     FB2_6   37    I/O     (b)
(unused)              0       0   \/5   0     FB2_7         (b)     (b)
digit<6>             25      20<-   0   0     FB2_8   38    I/O     O
(unused)              0       0   /\5   0     FB2_9   39    GSR/I/O GSR/I
(unused)              0       0   /\5   0     FB2_10        (b)     (b)
visningslage_s        1       0     0   4     FB2_11  40    GTS/I/O (b)
hundradelspuls_gammal
                      1       0     0   4     FB2_12        (b)     (b)
(unused)              0       0   \/5   0     FB2_13        (b)     (b)
(unused)              0       0   \/5   0     FB2_14  42    GTS/I/O (b)
digit<3>             20      15<-   0   0     FB2_15  43    I/O     O
counter_min_1<0>      3       3<- /\5   0     FB2_16        (b)     (b)
display<0>            1       0   /\3   1     FB2_17  44    I/O     I/O
rco_100_0             4       0   \/1   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$65         12: counter_sec_0<0>            23: nollstallning 
  2: counter_100_0<0>       13: counter_sec_0<1>            24: old_nollstallning 
  3: counter_100_0<1>       14: counter_sec_1<0>            25: raknar.PIN 
  4: counter_100_0<2>       15: counter_sec_1<1>            26: rco_100_0.LFBK 
  5: counter_100_0<3>       16: display<1>.PIN              27: rco_min_0 
  6: counter_100_1<0>       17: hundradelspuls              28: reset 
  7: counter_100_1<1>       18: hundradelspuls_gammal.LFBK  29: show<1>/show<1>_D2 
  8: counter_min_0<0>       19: mux_counter<0>.LFBK         30: show<2>/show<2>_D2 
  9: counter_min_0<1>       20: muxfrekvens                 31: show<3>/show<3>_D2 
 10: counter_min_1<0>.LFBK  21: muxfrekvens_old.LFBK        32: visningslage 
 11: counter_min_1<1>       22: muxfrekvens_older           33: visningslage_s.LFBK 

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
muxfrekvens_old      ...................X.................... 1       1
digit<5>             .XX..XXXXXXXXXXX..X..........XX.X....... 17      17
digit<6>             .XX..XXXXXXXXXXX..X..........XX.X....... 17      17
visningslage_s       ...............................X........ 1       1
hundradelspuls_gammal 
                     ................X....................... 1       1
digit<3>             XX...X.X.X.X.X.X..X.........XXX.X....... 13      13
counter_min_1<0>     .........X............XX..X............. 4       4
display<0>           ....................XX.................. 2       2
rco_100_0            .XXXX...........XX....XXXX.X............ 11      11
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               35/1
Number of signals used by logic mapping into function block:  35
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
muxfrekvens_older     1       0   /\1   3     FB3_1         (b)     (b)
counter_sec_0<2>      3       0   \/2   0     FB3_2   11    I/O     I
counter_sec_0<0>      3       2<- \/4   0     FB3_3         (b)     (b)
(unused)              0       0   \/5   0     FB3_4         (b)     (b)
digit<1>             23      18<-   0   0     FB3_5   12    I/O     O
(unused)              0       0   /\5   0     FB3_6         (b)     (b)
old_nollstallning     1       0   /\4   0     FB3_7         (b)     (b)
counter_100_1<2>      3       0     0   2     FB3_8   13    I/O     (b)
counter_100_1<0>      3       0     0   2     FB3_9   14    I/O     (b)
counter_100_0<2>      3       0     0   2     FB3_10        (b)     (b)
display<1>            1       0     0   4     FB3_11  18    I/O     I/O
rco_100_1             4       0     0   1     FB3_12        (b)     (b)
counter_min_1<2>      4       0     0   1     FB3_13        (b)     (b)
counter_100_1<3>      4       0     0   1     FB3_14  19    I/O     (b)
counter_100_0<3>      4       0   \/1   0     FB3_15  20    I/O     I
counter_100_1<1>      5       1<- \/1   0     FB3_16        (b)     (b)
counter_100_0<1>      6       1<-   0   0     FB3_17  22    I/O     (b)
counter_100_0<0>      6       1<-   0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$65         13: counter_min_1<0>       25: muxfrekvens_older.LFBK 
  2: $OpTx$FX_SC$69         14: counter_min_1<1>       26: nollstallning 
  3: $OpTx$FX_SC$70         15: counter_min_1<2>.LFBK  27: old_nollstallning.LFBK 
  4: counter_100_0<0>.LFBK  16: counter_min_1<3>       28: raknar.PIN 
  5: counter_100_0<1>.LFBK  17: counter_sec_0<0>.LFBK  29: rco_100_0 
  6: counter_100_0<2>.LFBK  18: counter_sec_0<1>       30: rco_100_1.LFBK 
  7: counter_100_0<3>.LFBK  19: counter_sec_0<2>.LFBK  31: rco_min_0 
  8: counter_100_1<0>.LFBK  20: counter_sec_1<0>       32: reset 
  9: counter_100_1<1>.LFBK  21: display<0>.PIN         33: show<1>/show<1>_D2 
 10: counter_100_1<2>.LFBK  22: hundradelspuls         34: show<2>/show<2>_D2 
 11: counter_100_1<3>.LFBK  23: hundradelspuls_gammal  35: show<3>/show<3>_D2 
 12: counter_min_0<0>       24: muxfrekvens_old       

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
muxfrekvens_older    .......................X................ 1       1
counter_sec_0<2>     ................XXX......XX..X.......... 6       6
counter_sec_0<0>     ................X........XX..X.......... 4       4
digit<1>             XXXX...X...XX...X..XX...........XXX..... 13      13
old_nollstallning    .........................X.............. 1       1
counter_100_1<2>     .......XXX...............XX.X........... 6       6
counter_100_1<0>     .......X.................XX.X........... 4       4
counter_100_0<2>     ...XXX...............XX..XXX............ 8       8
display<1>           ....................X..XX............... 3       3
rco_100_1            .......XXXX..............XX.XX.X........ 9       9
counter_min_1<2>     ............XXXX.........XX...X......... 7       7
counter_100_1<3>     .......XXXX..............XX.X........... 7       7
counter_100_0<3>     ...XXXX..............XX..XXX............ 9       9
counter_100_1<1>     .......XXXX..............XX.X........... 7       7
counter_100_0<1>     ...XXXX..............XX..XXX............ 9       9
counter_100_0<0>     ...XXXX..............XX..XXXX........... 10      10
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               30/6
Number of signals used by logic mapping into function block:  30
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
start_stopp_old       1       0   /\3   1     FB4_1         (b)     (b)
digit<7>              0       0     0   5     FB4_2   24    I/O     O
counter_sec_1<3>      3       0     0   2     FB4_3         (b)     (b)
counter_sec_1<0>      3       0     0   2     FB4_4         (b)     (b)
counter_min_1<3>      3       0     0   2     FB4_5   25    I/O     (b)
counter_min_0<2>      3       0     0   2     FB4_6         (b)     (b)
counter_min_0<0>      3       0     0   2     FB4_7         (b)     (b)
rco_sec_1             4       0     0   1     FB4_8   26    I/O     I
rco_sec_0             4       0     0   1     FB4_9   27    I/O     (b)
rco_min_0             4       0     0   1     FB4_10        (b)     (b)
raknar                1       0     0   4     FB4_11  28    I/O     I/O
counter_sec_1<2>      4       0     0   1     FB4_12        (b)     (b)
counter_sec_0<3>      4       0     0   1     FB4_13        (b)     (b)
counter_min_0<3>      4       0     0   1     FB4_14  29    I/O     (b)
counter_sec_1<1>      5       0     0   0     FB4_15  33    I/O     (b)
counter_sec_0<1>      5       0     0   0     FB4_16        (b)     (b)
counter_min_0<1>      5       0     0   0     FB4_17  34    I/O     (b)
show<2>/show<2>_D2    8       3<-   0   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: counter_100_0<2>       11: counter_sec_0<0>       21: nollstallning 
  2: counter_100_1<2>       12: counter_sec_0<1>.LFBK  22: old_nollstallning 
  3: counter_min_0<0>.LFBK  13: counter_sec_0<2>       23: rco_100_1 
  4: counter_min_0<1>.LFBK  14: counter_sec_0<3>.LFBK  24: rco_min_0.LFBK 
  5: counter_min_0<2>.LFBK  15: counter_sec_1<0>.LFBK  25: rco_sec_0.LFBK 
  6: counter_min_0<3>.LFBK  16: counter_sec_1<1>.LFBK  26: rco_sec_1.LFBK 
  7: counter_min_1<0>       17: counter_sec_1<2>.LFBK  27: reset 
  8: counter_min_1<1>       18: counter_sec_1<3>.LFBK  28: start_stopp 
  9: counter_min_1<2>       19: display<0>.PIN         29: start_stopp_old.LFBK 
 10: counter_min_1<3>.LFBK  20: display<1>.PIN         30: visningslage_s 

Signal                        1         2         3         4 Signals FB
Name                0----+----0----+----0----+----0----+----0 Used    Inputs
start_stopp_old      ...........................X............ 1       1
digit<7>             ........................................ 0       0
counter_sec_1<3>     ..............XXXX..XX..X............... 7       7
counter_sec_1<0>     ..............X.....XX..X............... 4       4
counter_min_1<3>     ......XXXX..........XX.X................ 7       7
counter_min_0<2>     ..XXX...............XX...X.............. 6       6
counter_min_0<0>     ..X.................XX...X.............. 4       4
rco_sec_1            ..............XXXX..XX..XXX............. 9       9
rco_sec_0            ..........XXXX......XXX.X.X............. 9       9
rco_min_0            ..XXXX..............XX.X.XX............. 9       9
raknar               ...........................XX........... 2       2
counter_sec_1<2>     ..............XXXX..XX..X............... 7       7
counter_sec_0<3>     ..........XXXX......XXX................. 7       7
counter_min_0<3>     ..XXXX..............XX...X.............. 7       7
counter_sec_1<1>     ..............XXXX..XX..X............... 7       7
counter_sec_0<1>     ..........XXXX......XXX................. 7       7
counter_min_0<1>     ..XXXX..............XX...X.............. 7       7
show<2>/show<2>_D2   XX..X...X...X...X.XX.........X.......... 9       9
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$FX_DC$65 <= display(1).PIN
	 XOR 
$OpTx$FX_DC$65 <= visningslage_s;


$OpTx$FX_SC$69 <= (visningslage_s AND display(1).PIN);


$OpTx$FX_SC$70 <= (NOT visningslage_s AND NOT display(1).PIN);









































FDCPE_counter_100_00: FDCPE port map (counter_100_0(0),counter_100_0_D(0),clk,reset,'0');
counter_100_0_D(0) <= ((rco_100_0 AND NOT counter_100_0(0).LFBK AND 
	NOT counter_100_0(1).LFBK AND NOT counter_100_0(2).LFBK AND NOT counter_100_0(3).LFBK)
	OR (nollstallning AND NOT old_nollstallning.LFBK)
	OR (NOT hundradelspuls AND NOT counter_100_0(0).LFBK)
	OR (hundradelspuls_gammal AND NOT counter_100_0(0).LFBK)
	OR (NOT counter_100_0(0).LFBK AND NOT raknar.PIN)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND raknar.PIN));

FTCPE_counter_100_01: FTCPE port map (counter_100_0(1),counter_100_0_T(1),clk,reset,'0');
counter_100_0_T(1) <= ((NOT nollstallning AND hundradelspuls AND 
	NOT hundradelspuls_gammal AND counter_100_0(0).LFBK AND NOT counter_100_0(3).LFBK AND 
	raknar.PIN)
	OR (nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_100_0(1).LFBK)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND counter_100_0(1).LFBK AND raknar.PIN)
	OR (NOT nollstallning AND hundradelspuls AND 
	NOT hundradelspuls_gammal AND counter_100_0(0).LFBK AND counter_100_0(2).LFBK AND 
	raknar.PIN)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND old_nollstallning.LFBK AND counter_100_0(2).LFBK AND 
	raknar.PIN)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND old_nollstallning.LFBK AND NOT counter_100_0(3).LFBK AND 
	raknar.PIN));

FTCPE_counter_100_02: FTCPE port map (counter_100_0(2),counter_100_0_T(2),clk,reset,'0');
counter_100_0_T(2) <= ((nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_100_0(2).LFBK)
	OR (NOT nollstallning AND hundradelspuls AND 
	NOT hundradelspuls_gammal AND counter_100_0(0).LFBK AND counter_100_0(1).LFBK AND 
	raknar.PIN)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND old_nollstallning.LFBK AND counter_100_0(1).LFBK AND 
	raknar.PIN));

FTCPE_counter_100_03: FTCPE port map (counter_100_0(3),counter_100_0_T(3),clk,reset,'0');
counter_100_0_T(3) <= ((nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_100_0(3).LFBK)
	OR (NOT nollstallning AND hundradelspuls AND 
	NOT hundradelspuls_gammal AND counter_100_0(0).LFBK AND counter_100_0(1).LFBK AND 
	counter_100_0(2).LFBK AND raknar.PIN)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND old_nollstallning.LFBK AND counter_100_0(1).LFBK AND 
	counter_100_0(2).LFBK AND raknar.PIN)
	OR (hundradelspuls AND NOT hundradelspuls_gammal AND 
	counter_100_0(0).LFBK AND NOT counter_100_0(1).LFBK AND NOT counter_100_0(2).LFBK AND 
	counter_100_0(3).LFBK AND raknar.PIN));

FDCPE_counter_100_10: FDCPE port map (counter_100_1(0),counter_100_1_D(0),clk,reset,'0');
counter_100_1_D(0) <= ((nollstallning AND NOT old_nollstallning.LFBK)
	OR (rco_100_0 AND counter_100_1(0).LFBK)
	OR (NOT rco_100_0 AND NOT counter_100_1(0).LFBK));

FDCPE_counter_100_11: FDCPE port map (counter_100_1(1),counter_100_1_D(1),clk,reset,'0');
counter_100_1_D(1) <= ((rco_100_0 AND counter_100_1(0).LFBK AND 
	counter_100_1(1).LFBK)
	OR (nollstallning AND NOT old_nollstallning.LFBK)
	OR (NOT rco_100_0 AND NOT counter_100_1(1).LFBK)
	OR (NOT counter_100_1(0).LFBK AND NOT counter_100_1(1).LFBK)
	OR (NOT counter_100_1(1).LFBK AND NOT counter_100_1(2).LFBK AND 
	counter_100_1(3).LFBK));

FTCPE_counter_100_12: FTCPE port map (counter_100_1(2),counter_100_1_T(2),clk,reset,'0');
counter_100_1_T(2) <= ((nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_100_1(2).LFBK)
	OR (NOT nollstallning AND rco_100_0 AND 
	counter_100_1(0).LFBK AND counter_100_1(1).LFBK)
	OR (rco_100_0 AND old_nollstallning.LFBK AND 
	counter_100_1(0).LFBK AND counter_100_1(1).LFBK));

FTCPE_counter_100_13: FTCPE port map (counter_100_1(3),counter_100_1_T(3),clk,reset,'0');
counter_100_1_T(3) <= ((nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_100_1(3).LFBK)
	OR (NOT nollstallning AND rco_100_0 AND 
	counter_100_1(0).LFBK AND counter_100_1(1).LFBK AND counter_100_1(2).LFBK)
	OR (rco_100_0 AND old_nollstallning.LFBK AND 
	counter_100_1(0).LFBK AND counter_100_1(1).LFBK AND counter_100_1(2).LFBK)
	OR (rco_100_0 AND counter_100_1(0).LFBK AND 
	NOT counter_100_1(1).LFBK AND NOT counter_100_1(2).LFBK AND counter_100_1(3).LFBK));

FDCPE_counter_min_00: FDCPE port map (counter_min_0(0),counter_min_0_D(0),clk,reset,'0');
counter_min_0_D(0) <= ((nollstallning AND NOT old_nollstallning)
	OR (counter_min_0(0).LFBK AND rco_sec_1.LFBK)
	OR (NOT counter_min_0(0).LFBK AND NOT rco_sec_1.LFBK));

FDCPE_counter_min_01: FDCPE port map (counter_min_0(1),counter_min_0_D(1),clk,reset,'0');
counter_min_0_D(1) <= ((nollstallning AND NOT old_nollstallning)
	OR (NOT counter_min_0(0).LFBK AND NOT counter_min_0(1).LFBK)
	OR (NOT rco_sec_1.LFBK AND NOT counter_min_0(1).LFBK)
	OR (counter_min_0(0).LFBK AND rco_sec_1.LFBK AND 
	counter_min_0(1).LFBK)
	OR (NOT counter_min_0(1).LFBK AND NOT counter_min_0(2).LFBK AND 
	counter_min_0(3).LFBK));

FTCPE_counter_min_02: FTCPE port map (counter_min_0(2),counter_min_0_T(2),clk,reset,'0');
counter_min_0_T(2) <= ((nollstallning AND NOT old_nollstallning AND 
	counter_min_0(2).LFBK)
	OR (NOT nollstallning AND counter_min_0(0).LFBK AND 
	rco_sec_1.LFBK AND counter_min_0(1).LFBK)
	OR (old_nollstallning AND counter_min_0(0).LFBK AND 
	rco_sec_1.LFBK AND counter_min_0(1).LFBK));

FTCPE_counter_min_03: FTCPE port map (counter_min_0(3),counter_min_0_T(3),clk,reset,'0');
counter_min_0_T(3) <= ((nollstallning AND NOT old_nollstallning AND 
	counter_min_0(3).LFBK)
	OR (NOT nollstallning AND counter_min_0(0).LFBK AND 
	rco_sec_1.LFBK AND counter_min_0(1).LFBK AND counter_min_0(2).LFBK)
	OR (old_nollstallning AND counter_min_0(0).LFBK AND 
	rco_sec_1.LFBK AND counter_min_0(1).LFBK AND counter_min_0(2).LFBK)
	OR (counter_min_0(0).LFBK AND rco_sec_1.LFBK AND 
	NOT counter_min_0(1).LFBK AND NOT counter_min_0(2).LFBK AND counter_min_0(3).LFBK));

FDCPE_counter_min_10: FDCPE port map (counter_min_1(0),counter_min_1_D(0),clk,reset,'0');
counter_min_1_D(0) <= ((nollstallning AND NOT old_nollstallning)
	OR (rco_min_0 AND counter_min_1(0).LFBK)
	OR (NOT rco_min_0 AND NOT counter_min_1(0).LFBK));

FDCPE_counter_min_11: FDCPE port map (counter_min_1(1),counter_min_1_D(1),clk,reset,'0');
counter_min_1_D(1) <= ((nollstallning AND NOT old_nollstallning)
	OR (NOT rco_min_0 AND NOT counter_min_1(1).LFBK)
	OR (counter_min_1(0) AND rco_min_0 AND 
	counter_min_1(1).LFBK)
	OR (counter_min_1(2) AND NOT counter_min_1(3) AND 
	NOT counter_min_1(1).LFBK)
	OR (NOT counter_min_1(0) AND NOT counter_min_1(1).LFBK));

FTCPE_counter_min_12: FTCPE port map (counter_min_1(2),counter_min_1_T(2),clk,reset,'0');
counter_min_1_T(2) <= ((nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_min_1(2).LFBK)
	OR (counter_min_1(0) AND counter_min_1(1) AND 
	NOT nollstallning AND rco_min_0)
	OR (counter_min_1(0) AND counter_min_1(1) AND rco_min_0 AND 
	old_nollstallning.LFBK)
	OR (counter_min_1(0) AND NOT counter_min_1(3) AND rco_min_0 AND 
	counter_min_1(2).LFBK));

FTCPE_counter_min_13: FTCPE port map (counter_min_1(3),counter_min_1_T(3),clk,reset,'0');
counter_min_1_T(3) <= ((nollstallning AND NOT old_nollstallning AND 
	counter_min_1(3).LFBK)
	OR (counter_min_1(0) AND counter_min_1(1) AND 
	counter_min_1(2) AND NOT nollstallning AND rco_min_0.LFBK)
	OR (counter_min_1(0) AND counter_min_1(1) AND 
	counter_min_1(2) AND old_nollstallning AND rco_min_0.LFBK));

FDCPE_counter_sec_00: FDCPE port map (counter_sec_0(0),counter_sec_0_D(0),clk,reset,'0');
counter_sec_0_D(0) <= ((counter_sec_0(0).LFBK AND rco_100_1.LFBK)
	OR (NOT counter_sec_0(0).LFBK AND NOT rco_100_1.LFBK)
	OR (nollstallning AND NOT old_nollstallning.LFBK));

FDCPE_counter_sec_01: FDCPE port map (counter_sec_0(1),counter_sec_0_D(1),clk,reset,'0');
counter_sec_0_D(1) <= ((NOT counter_sec_0(0) AND NOT counter_sec_0(1).LFBK)
	OR (nollstallning AND NOT old_nollstallning)
	OR (NOT rco_100_1 AND NOT counter_sec_0(1).LFBK)
	OR (counter_sec_0(0) AND rco_100_1 AND 
	counter_sec_0(1).LFBK)
	OR (NOT counter_sec_0(2) AND NOT counter_sec_0(1).LFBK AND 
	counter_sec_0(3).LFBK));

FTCPE_counter_sec_02: FTCPE port map (counter_sec_0(2),counter_sec_0_T(2),clk,reset,'0');
counter_sec_0_T(2) <= ((nollstallning AND NOT old_nollstallning.LFBK AND 
	counter_sec_0(2).LFBK)
	OR (counter_sec_0(1) AND NOT nollstallning AND 
	counter_sec_0(0).LFBK AND rco_100_1.LFBK)
	OR (counter_sec_0(1) AND old_nollstallning.LFBK AND 
	counter_sec_0(0).LFBK AND rco_100_1.LFBK));

FTCPE_counter_sec_03: FTCPE port map (counter_sec_0(3),counter_sec_0_T(3),clk,reset,'0');
counter_sec_0_T(3) <= ((nollstallning AND NOT old_nollstallning AND 
	counter_sec_0(3).LFBK)
	OR (counter_sec_0(0) AND counter_sec_0(2) AND 
	NOT nollstallning AND rco_100_1 AND counter_sec_0(1).LFBK)
	OR (counter_sec_0(0) AND counter_sec_0(2) AND rco_100_1 AND 
	old_nollstallning AND counter_sec_0(1).LFBK)
	OR (counter_sec_0(0) AND NOT counter_sec_0(2) AND rco_100_1 AND 
	NOT counter_sec_0(1).LFBK AND counter_sec_0(3).LFBK));

FDCPE_counter_sec_10: FDCPE port map (counter_sec_1(0),counter_sec_1_D(0),clk,reset,'0');
counter_sec_1_D(0) <= ((nollstallning AND NOT old_nollstallning)
	OR (counter_sec_1(0).LFBK AND rco_sec_0.LFBK)
	OR (NOT counter_sec_1(0).LFBK AND NOT rco_sec_0.LFBK));

FDCPE_counter_sec_11: FDCPE port map (counter_sec_1(1),counter_sec_1_D(1),clk,reset,'0');
counter_sec_1_D(1) <= ((nollstallning AND NOT old_nollstallning)
	OR (NOT counter_sec_1(0).LFBK AND NOT counter_sec_1(1).LFBK)
	OR (NOT rco_sec_0.LFBK AND NOT counter_sec_1(1).LFBK)
	OR (counter_sec_1(0).LFBK AND rco_sec_0.LFBK AND 
	counter_sec_1(1).LFBK)
	OR (counter_sec_1(2).LFBK AND NOT counter_sec_1(3).LFBK AND 
	NOT counter_sec_1(1).LFBK));

FTCPE_counter_sec_12: FTCPE port map (counter_sec_1(2),counter_sec_1_T(2),clk,reset,'0');
counter_sec_1_T(2) <= ((nollstallning AND NOT old_nollstallning AND 
	counter_sec_1(2).LFBK)
	OR (NOT nollstallning AND counter_sec_1(0).LFBK AND 
	rco_sec_0.LFBK AND counter_sec_1(1).LFBK)
	OR (old_nollstallning AND counter_sec_1(0).LFBK AND 
	rco_sec_0.LFBK AND counter_sec_1(1).LFBK)
	OR (counter_sec_1(0).LFBK AND rco_sec_0.LFBK AND 
	counter_sec_1(2).LFBK AND NOT counter_sec_1(3).LFBK));

FTCPE_counter_sec_13: FTCPE port map (counter_sec_1(3),counter_sec_1_T(3),clk,reset,'0');
counter_sec_1_T(3) <= ((nollstallning AND NOT old_nollstallning AND 
	counter_sec_1(3).LFBK)
	OR (NOT nollstallning AND counter_sec_1(0).LFBK AND 
	rco_sec_0.LFBK AND counter_sec_1(2).LFBK AND counter_sec_1(1).LFBK)
	OR (old_nollstallning AND counter_sec_1(0).LFBK AND 
	rco_sec_0.LFBK AND counter_sec_1(2).LFBK AND counter_sec_1(1).LFBK));


digit(0) <= NOT (((EXP1_.EXP)
	OR (counter_sec_0(1) AND visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_0(1) AND NOT visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_1(1) AND visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND NOT display(1).PIN AND display(0).PIN)
	OR (counter_sec_1(1) AND NOT visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND display(1).PIN AND display(0).PIN)
	OR (NOT counter_min_1(0) AND visningslage_s AND 
	show(2)/show(2)_D2 AND NOT counter_min_1(1).LFBK AND display(1).PIN AND 
	display(0).PIN)
	OR (show(2)/show(2)_D2 AND show(3)/show(3)_D2.LFBK)
	OR (counter_100_0(1) AND NOT visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_100_1(1) AND NOT visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND NOT display(1).PIN AND display(0).PIN)
	OR (counter_min_0(1) AND visningslage_s AND 
	show(3)/show(3)_D2.LFBK AND display(1).PIN AND NOT display(0).PIN)
	OR (visningslage_s AND counter_min_1(1).LFBK AND 
	show(3)/show(3)_D2.LFBK AND display(1).PIN AND display(0).PIN)));


digit(1) <= NOT (((counter_sec_0(0).EXP)
	OR (NOT counter_min_0(0) AND show(2)/show(2)_D2 AND 
	$OpTx$FX_SC$69 AND show(1)/show(1)_D2 AND NOT display(0).PIN)
	OR (NOT counter_sec_1(0) AND show(2)/show(2)_D2 AND 
	$OpTx$FX_DC$65 AND show(1)/show(1)_D2 AND display(0).PIN)
	OR (NOT counter_min_1(0) AND show(2)/show(2)_D2 AND 
	$OpTx$FX_SC$69 AND show(1)/show(1)_D2 AND display(0).PIN)
	OR (show(2)/show(2)_D2 AND $OpTx$FX_DC$65 AND 
	show(1)/show(1)_D2 AND NOT counter_sec_0(0).LFBK AND NOT display(0).PIN)
	OR (show(2)/show(2)_D2 AND NOT $OpTx$FX_DC$65 AND 
	NOT $OpTx$FX_SC$69 AND NOT show(1)/show(1)_D2 AND counter_100_0(0).LFBK AND 
	NOT display(0).PIN)
	OR (old_nollstallning.EXP)
	OR (counter_min_0(0) AND show(2)/show(2)_D2 AND 
	NOT $OpTx$FX_DC$65 AND NOT $OpTx$FX_SC$70 AND NOT show(1)/show(1)_D2 AND 
	NOT display(0).PIN)
	OR (counter_min_0(0) AND show(2)/show(2)_D2 AND 
	NOT $OpTx$FX_DC$65 AND NOT show(1)/show(1)_D2 AND counter_100_0(0).LFBK AND 
	NOT display(0).PIN)
	OR (counter_min_1(0) AND show(2)/show(2)_D2 AND 
	NOT $OpTx$FX_DC$65 AND NOT $OpTx$FX_SC$70 AND NOT show(1)/show(1)_D2 AND 
	display(0).PIN)
	OR (counter_min_1(0) AND show(2)/show(2)_D2 AND 
	NOT $OpTx$FX_DC$65 AND NOT show(1)/show(1)_D2 AND counter_100_1(0).LFBK AND 
	display(0).PIN)
	OR (show(2)/show(2)_D2 AND NOT $OpTx$FX_DC$65 AND 
	NOT $OpTx$FX_SC$69 AND NOT show(1)/show(1)_D2 AND counter_100_1(0).LFBK AND 
	display(0).PIN)
	OR (show(2)/show(2)_D2 AND show(3)/show(3)_D2)
	OR (show(3)/show(3)_D2 AND show(1)/show(1)_D2)
	OR (show(2)/show(2)_D2 AND NOT $OpTx$FX_DC$65 AND 
	NOT $OpTx$FX_SC$70 AND NOT $OpTx$FX_SC$69 AND NOT show(1)/show(1)_D2)
	OR (show(2)/show(2)_D2 AND $OpTx$FX_SC$70 AND 
	show(1)/show(1)_D2 AND NOT counter_100_0(0).LFBK AND NOT display(0).PIN)
	OR (show(2)/show(2)_D2 AND $OpTx$FX_SC$70 AND 
	show(1)/show(1)_D2 AND NOT counter_100_1(0).LFBK AND display(0).PIN)));


digit(2) <= ((counter_sec_0(0) AND NOT counter_sec_0(3) AND 
	NOT visningslage_s AND display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_0(2) AND NOT counter_sec_0(3) AND 
	visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_0(2) AND NOT counter_sec_0(3) AND 
	NOT visningslage_s AND display(1).PIN AND NOT display(0).PIN)
	OR (counter_min_1(0) AND NOT counter_min_1(3) AND 
	visningslage_s AND display(1).PIN AND display(0).PIN)
	OR (counter_min_1(2) AND NOT counter_min_1(3) AND 
	visningslage_s AND display(1).PIN AND display(0).PIN)
	OR (EXP6_.EXP)
	OR (counter_100_1(0) AND NOT counter_100_1(3) AND 
	NOT visningslage_s AND NOT display(1).PIN AND display(0).PIN)
	OR (counter_sec_1(0) AND NOT counter_sec_1(3) AND 
	visningslage_s AND NOT display(1).PIN AND display(0).PIN)
	OR (counter_sec_1(0) AND NOT counter_sec_1(3) AND 
	NOT visningslage_s AND display(1).PIN AND display(0).PIN)
	OR (counter_sec_1(2) AND NOT counter_sec_1(3) AND 
	visningslage_s AND NOT display(1).PIN AND display(0).PIN)
	OR (counter_100_1(2) AND NOT counter_100_1(3) AND 
	NOT visningslage_s AND NOT display(1).PIN AND display(0).PIN)
	OR (counter_100_0(0) AND NOT counter_100_0(3) AND 
	NOT visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_min_0(0) AND NOT counter_min_0(3) AND 
	visningslage_s AND display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_0(0) AND NOT counter_sec_0(3) AND 
	visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_100_0(2) AND NOT counter_100_0(3) AND 
	NOT visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_min_0(2) AND NOT counter_min_0(3) AND 
	visningslage_s AND display(1).PIN AND NOT display(0).PIN));


digit(3) <= ((EXP16_.EXP)
	OR (NOT counter_sec_1(0) AND NOT show(2)/show(2)_D2 AND 
	$OpTx$FX_DC$65 AND NOT show(1)/show(1)_D2 AND mux_counter(0).LFBK)
	OR (NOT counter_100_0(0) AND NOT show(2)/show(2)_D2 AND 
	NOT show(1)/show(1)_D2 AND NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND 
	NOT display(1).PIN)
	OR (NOT counter_100_0(0) AND NOT show(3)/show(3)_D2 AND 
	show(1)/show(1)_D2 AND NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND 
	NOT display(1).PIN)
	OR (NOT counter_100_1(0) AND NOT show(2)/show(2)_D2 AND 
	NOT show(1)/show(1)_D2 AND mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND 
	NOT display(1).PIN)
	OR (NOT counter_100_1(0) AND NOT show(3)/show(3)_D2 AND 
	show(1)/show(1)_D2 AND mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND 
	NOT display(1).PIN)
	OR (NOT counter_min_0(0) AND NOT show(2)/show(2)_D2 AND 
	NOT show(1)/show(1)_D2 AND NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (NOT counter_min_0(0) AND NOT show(3)/show(3)_D2 AND 
	show(1)/show(1)_D2 AND NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (counter_sec_0(0) AND show(2)/show(2)_D2 AND 
	NOT show(3)/show(3)_D2 AND $OpTx$FX_DC$65 AND NOT show(1)/show(1)_D2 AND 
	NOT mux_counter(0).LFBK)
	OR (NOT show(2)/show(2)_D2 AND NOT show(1)/show(1)_D2 AND 
	NOT counter_min_1(0).LFBK AND mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (NOT show(3)/show(3)_D2 AND show(1)/show(1)_D2 AND 
	NOT counter_min_1(0).LFBK AND mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (NOT show(2)/show(2)_D2 AND show(3)/show(3)_D2 AND 
	NOT show(1)/show(1)_D2)
	OR (NOT show(2)/show(2)_D2 AND NOT show(3)/show(3)_D2 AND 
	show(1)/show(1)_D2)
	OR (NOT counter_sec_0(0) AND NOT show(2)/show(2)_D2 AND 
	$OpTx$FX_DC$65 AND NOT show(1)/show(1)_D2 AND NOT mux_counter(0).LFBK)
	OR (NOT counter_sec_0(0) AND NOT show(3)/show(3)_D2 AND 
	$OpTx$FX_DC$65 AND show(1)/show(1)_D2 AND NOT mux_counter(0).LFBK)
	OR (NOT counter_sec_1(0) AND NOT show(3)/show(3)_D2 AND 
	$OpTx$FX_DC$65 AND show(1)/show(1)_D2 AND mux_counter(0).LFBK));


digit(4) <= ((EXP7_.EXP)
	OR (NOT counter_100_0(0) AND counter_100_0(1) AND 
	NOT counter_100_0(3) AND NOT visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_100_1(0) AND NOT counter_100_1(1) AND 
	NOT counter_100_1(2) AND NOT visningslage_s AND NOT display(1).PIN AND display(0).PIN)
	OR (NOT counter_min_0(0) AND counter_min_0(1) AND 
	NOT counter_min_0(3) AND visningslage_s AND display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_sec_1(0) AND NOT counter_sec_1(2) AND 
	NOT counter_sec_1(1) AND visningslage_s AND NOT display(1).PIN AND display(0).PIN)
	OR (NOT counter_sec_1(0) AND NOT counter_sec_1(2) AND 
	NOT counter_sec_1(1) AND NOT visningslage_s AND display(1).PIN AND display(0).PIN)
	OR (NOT counter_sec_0(0) AND counter_sec_0(1) AND 
	NOT counter_sec_0(3) AND visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_100_0(0) AND NOT counter_100_0(1) AND 
	NOT counter_100_0(2) AND NOT visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_min_0(0) AND NOT counter_min_0(1) AND 
	NOT counter_min_0(2) AND visningslage_s AND display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_sec_0(0) AND NOT counter_sec_0(1) AND 
	NOT counter_sec_0(2) AND visningslage_s AND NOT display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_sec_0(0) AND NOT counter_sec_0(1) AND 
	NOT counter_sec_0(2) AND NOT visningslage_s AND display(1).PIN AND NOT display(0).PIN)
	OR (NOT counter_min_1(0) AND NOT counter_min_1(2) AND 
	visningslage_s AND NOT counter_min_1(1).LFBK AND display(1).PIN AND 
	display(0).PIN));


digit(5) <= NOT (((counter_100_0(0) AND counter_100_0(1) AND 
	NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_100_1(0) AND counter_100_1(1) AND 
	mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_100_0(1) AND NOT show(2)/show(2)_D2 AND 
	NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_100_1(1) AND NOT show(2)/show(2)_D2 AND 
	mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_sec_1(1) AND NOT show(2)/show(2)_D2 AND 
	mux_counter(0).LFBK AND visningslage_s.LFBK AND NOT display(1).PIN)
	OR (EXP10_.EXP)
	OR (counter_sec_1(0) AND counter_sec_1(1) AND 
	mux_counter(0).LFBK AND visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_sec_1(0) AND counter_sec_1(1) AND 
	mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND display(1).PIN)
	OR (counter_sec_0(1) AND NOT show(2)/show(2)_D2 AND 
	NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_sec_0(1) AND NOT show(2)/show(2)_D2 AND 
	NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND display(1).PIN)
	OR (counter_sec_1(1) AND NOT show(2)/show(2)_D2 AND 
	mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND display(1).PIN)
	OR (show(2)/show(2)_D2 AND show(3)/show(3)_D2)
	OR (counter_min_0(0) AND counter_min_0(1) AND 
	NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND display(1).PIN)
	OR (counter_min_0(1) AND NOT show(2)/show(2)_D2 AND 
	NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND display(1).PIN)
	OR (counter_min_1(1) AND NOT show(2)/show(2)_D2 AND 
	mux_counter(0).LFBK AND visningslage_s.LFBK AND display(1).PIN)
	OR (counter_min_1(1) AND counter_min_1(0).LFBK AND 
	mux_counter(0).LFBK AND visningslage_s.LFBK AND display(1).PIN)));


digit(6) <= NOT (((EXP12_.EXP)
	OR (counter_sec_0(1) AND show(3)/show(3)_D2 AND 
	NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_sec_0(1) AND show(3)/show(3)_D2 AND 
	NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND display(1).PIN)
	OR (counter_sec_1(1) AND show(3)/show(3)_D2 AND 
	mux_counter(0).LFBK AND visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_sec_1(1) AND show(3)/show(3)_D2 AND 
	mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND display(1).PIN)
	OR (counter_min_1(1) AND show(2)/show(2)_D2 AND 
	counter_min_1(0).LFBK AND mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (EXP15_.EXP)
	OR (counter_100_1(0) AND counter_100_1(1) AND 
	show(2)/show(2)_D2 AND mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND 
	NOT display(1).PIN)
	OR (counter_min_0(0) AND counter_min_0(1) AND 
	show(2)/show(2)_D2 AND NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (NOT counter_100_1(1) AND NOT show(2)/show(2)_D2 AND 
	NOT show(3)/show(3)_D2 AND mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND 
	NOT display(1).PIN)
	OR (NOT counter_min_0(1) AND NOT show(2)/show(2)_D2 AND 
	NOT show(3)/show(3)_D2 AND NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (NOT counter_min_1(1) AND NOT show(2)/show(2)_D2 AND 
	NOT show(3)/show(3)_D2 AND mux_counter(0).LFBK AND visningslage_s.LFBK AND 
	display(1).PIN)
	OR (show(2)/show(2)_D2 AND show(3)/show(3)_D2)
	OR (counter_100_0(1) AND show(3)/show(3)_D2 AND 
	NOT mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_100_1(1) AND show(3)/show(3)_D2 AND 
	mux_counter(0).LFBK AND NOT visningslage_s.LFBK AND NOT display(1).PIN)
	OR (counter_min_0(1) AND show(3)/show(3)_D2 AND 
	NOT mux_counter(0).LFBK AND visningslage_s.LFBK AND display(1).PIN)
	OR (counter_min_1(1) AND show(3)/show(3)_D2 AND 
	mux_counter(0).LFBK AND visningslage_s.LFBK AND display(1).PIN)));


digit(7) <= '0';

FTCPE_display0: FTCPE port map (display(0),display_T(0),clk,reset,'0');
display_T(0) <= (NOT muxfrekvens_older AND muxfrekvens_old.LFBK);

FTCPE_display1: FTCPE port map (display(1),display_T(1),clk,reset,'0');
display_T(1) <= (muxfrekvens_old AND NOT muxfrekvens_older.LFBK AND 
	display(0).PIN);

FDCPE_hundradelspuls_gammal: FDCPE port map (hundradelspuls_gammal,hundradelspuls,clk,'0','0');

FDCPE_muxfrekvens_old: FDCPE port map (muxfrekvens_old,muxfrekvens,clk,'0','0');

FDCPE_muxfrekvens_older: FDCPE port map (muxfrekvens_older,muxfrekvens_old,clk,'0','0');

FDCPE_old_nollstallning: FDCPE port map (old_nollstallning,nollstallning,clk,'0','0');

FTCPE_raknar: FTCPE port map (raknar,raknar_T,clk,reset,'0');
raknar_T <= (start_stopp AND NOT start_stopp_old.LFBK);

FTCPE_rco_100_0: FTCPE port map (rco_100_0,rco_100_0_T,clk,'0','0');
rco_100_0_T <= ((NOT reset AND NOT counter_100_0(0) AND NOT counter_100_0(1) AND 
	NOT counter_100_0(2) AND NOT counter_100_0(3) AND NOT nollstallning AND 
	rco_100_0.LFBK)
	OR (NOT reset AND NOT counter_100_0(0) AND NOT counter_100_0(1) AND 
	NOT counter_100_0(2) AND NOT counter_100_0(3) AND old_nollstallning AND 
	rco_100_0.LFBK)
	OR (NOT reset AND counter_100_0(0) AND NOT counter_100_0(1) AND 
	NOT counter_100_0(2) AND counter_100_0(3) AND NOT nollstallning AND 
	hundradelspuls AND NOT rco_100_0.LFBK AND NOT hundradelspuls_gammal.LFBK AND 
	raknar.PIN)
	OR (NOT reset AND counter_100_0(0) AND NOT counter_100_0(1) AND 
	NOT counter_100_0(2) AND counter_100_0(3) AND hundradelspuls AND 
	old_nollstallning AND NOT rco_100_0.LFBK AND NOT hundradelspuls_gammal.LFBK AND 
	raknar.PIN));

FTCPE_rco_100_1: FTCPE port map (rco_100_1,rco_100_1_T,clk,'0','0');
rco_100_1_T <= ((NOT reset AND NOT nollstallning AND rco_100_0 AND 
	counter_100_1(0).LFBK AND NOT counter_100_1(1).LFBK AND NOT counter_100_1(2).LFBK AND 
	counter_100_1(3).LFBK AND NOT rco_100_1.LFBK)
	OR (NOT reset AND NOT nollstallning AND NOT rco_100_0 AND 
	NOT counter_100_1(0).LFBK AND NOT counter_100_1(1).LFBK AND NOT counter_100_1(2).LFBK AND 
	NOT counter_100_1(3).LFBK AND rco_100_1.LFBK)
	OR (NOT reset AND rco_100_0 AND old_nollstallning.LFBK AND 
	counter_100_1(0).LFBK AND NOT counter_100_1(1).LFBK AND NOT counter_100_1(2).LFBK AND 
	counter_100_1(3).LFBK AND NOT rco_100_1.LFBK)
	OR (NOT reset AND NOT rco_100_0 AND old_nollstallning.LFBK AND 
	NOT counter_100_1(0).LFBK AND NOT counter_100_1(1).LFBK AND NOT counter_100_1(2).LFBK AND 
	NOT counter_100_1(3).LFBK AND rco_100_1.LFBK));

FTCPE_rco_min_0: FTCPE port map (rco_min_0,rco_min_0_T,clk,'0','0');
rco_min_0_T <= ((NOT reset AND NOT nollstallning AND counter_min_0(0).LFBK AND 
	rco_sec_1.LFBK AND NOT counter_min_0(1).LFBK AND NOT counter_min_0(2).LFBK AND 
	counter_min_0(3).LFBK AND NOT rco_min_0.LFBK)
	OR (NOT reset AND NOT nollstallning AND NOT counter_min_0(0).LFBK AND 
	NOT rco_sec_1.LFBK AND NOT counter_min_0(1).LFBK AND NOT counter_min_0(2).LFBK AND 
	NOT counter_min_0(3).LFBK AND rco_min_0.LFBK)
	OR (NOT reset AND old_nollstallning AND 
	counter_min_0(0).LFBK AND rco_sec_1.LFBK AND NOT counter_min_0(1).LFBK AND 
	NOT counter_min_0(2).LFBK AND counter_min_0(3).LFBK AND NOT rco_min_0.LFBK)
	OR (NOT reset AND old_nollstallning AND 
	NOT counter_min_0(0).LFBK AND NOT rco_sec_1.LFBK AND NOT counter_min_0(1).LFBK AND 
	NOT counter_min_0(2).LFBK AND NOT counter_min_0(3).LFBK AND rco_min_0.LFBK));

FTCPE_rco_sec_0: FTCPE port map (rco_sec_0,rco_sec_0_T,clk,'0','0');
rco_sec_0_T <= ((NOT reset AND counter_sec_0(0) AND NOT counter_sec_0(2) AND 
	NOT nollstallning AND rco_100_1 AND NOT rco_sec_0.LFBK AND 
	NOT counter_sec_0(1).LFBK AND counter_sec_0(3).LFBK)
	OR (NOT reset AND counter_sec_0(0) AND NOT counter_sec_0(2) AND 
	rco_100_1 AND old_nollstallning AND NOT rco_sec_0.LFBK AND 
	NOT counter_sec_0(1).LFBK AND counter_sec_0(3).LFBK)
	OR (NOT reset AND NOT counter_sec_0(0) AND NOT counter_sec_0(2) AND 
	NOT nollstallning AND NOT rco_100_1 AND rco_sec_0.LFBK AND 
	NOT counter_sec_0(1).LFBK AND NOT counter_sec_0(3).LFBK)
	OR (NOT reset AND NOT counter_sec_0(0) AND NOT counter_sec_0(2) AND 
	NOT rco_100_1 AND old_nollstallning AND rco_sec_0.LFBK AND 
	NOT counter_sec_0(1).LFBK AND NOT counter_sec_0(3).LFBK));

FTCPE_rco_sec_1: FTCPE port map (rco_sec_1,rco_sec_1_T,clk,'0','0');
rco_sec_1_T <= ((NOT reset AND NOT nollstallning AND rco_sec_1.LFBK AND 
	NOT counter_sec_1(0).LFBK AND NOT rco_sec_0.LFBK AND NOT counter_sec_1(2).LFBK AND 
	NOT counter_sec_1(3).LFBK AND NOT counter_sec_1(1).LFBK)
	OR (NOT reset AND NOT nollstallning AND NOT rco_sec_1.LFBK AND 
	counter_sec_1(0).LFBK AND rco_sec_0.LFBK AND counter_sec_1(2).LFBK AND 
	NOT counter_sec_1(3).LFBK AND NOT counter_sec_1(1).LFBK)
	OR (NOT reset AND old_nollstallning AND rco_sec_1.LFBK AND 
	NOT counter_sec_1(0).LFBK AND NOT rco_sec_0.LFBK AND NOT counter_sec_1(2).LFBK AND 
	NOT counter_sec_1(3).LFBK AND NOT counter_sec_1(1).LFBK)
	OR (NOT reset AND old_nollstallning AND NOT rco_sec_1.LFBK AND 
	counter_sec_1(0).LFBK AND rco_sec_0.LFBK AND counter_sec_1(2).LFBK AND 
	NOT counter_sec_1(3).LFBK AND NOT counter_sec_1(1).LFBK));


show(1)/show(1)_D2 <= ((counter_sec_0(1) AND visningslage_s AND 
	NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_0(1) AND NOT visningslage_s AND 
	display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_1(1) AND NOT visningslage_s AND 
	display(1).PIN AND display(0).PIN)
	OR (counter_100_0(1) AND NOT visningslage_s AND 
	NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_100_1(1) AND NOT visningslage_s AND 
	NOT display(1).PIN AND display(0).PIN)
	OR (counter_min_0(1) AND visningslage_s AND 
	display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_1(1) AND visningslage_s AND 
	NOT display(1).PIN AND display(0).PIN)
	OR (visningslage_s AND counter_min_1(1).LFBK AND 
	display(1).PIN AND display(0).PIN));


show(2)/show(2)_D2 <= ((counter_sec_0(2) AND NOT visningslage_s AND 
	display(1).PIN AND NOT display(0).PIN)
	OR (visningslage_s AND counter_sec_1(2).LFBK AND 
	NOT display(1).PIN AND display(0).PIN)
	OR (NOT visningslage_s AND counter_sec_1(2).LFBK AND 
	display(1).PIN AND display(0).PIN)
	OR (counter_100_0(2) AND NOT visningslage_s AND 
	NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_100_1(2) AND NOT visningslage_s AND 
	NOT display(1).PIN AND display(0).PIN)
	OR (counter_sec_0(2) AND visningslage_s AND 
	NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_min_1(2) AND visningslage_s AND 
	display(1).PIN AND display(0).PIN)
	OR (visningslage_s AND counter_min_0(2).LFBK AND 
	display(1).PIN AND NOT display(0).PIN));


show(3)/show(3)_D2 <= ((counter_sec_0(3) AND visningslage_s AND 
	NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_0(3) AND NOT visningslage_s AND 
	display(1).PIN AND NOT display(0).PIN)
	OR (counter_sec_1(3) AND visningslage_s AND 
	NOT display(1).PIN AND display(0).PIN)
	OR (counter_sec_1(3) AND NOT visningslage_s AND 
	display(1).PIN AND display(0).PIN)
	OR (counter_100_1(3) AND NOT visningslage_s AND 
	NOT display(1).PIN AND display(0).PIN)
	OR (counter_min_0(3) AND visningslage_s AND 
	display(1).PIN AND NOT display(0).PIN)
	OR (counter_100_0(3) AND NOT visningslage_s AND 
	NOT display(1).PIN AND NOT display(0).PIN)
	OR (counter_min_1(3) AND visningslage_s AND 
	display(1).PIN AND display(0).PIN));

FDCPE_start_stopp_old: FDCPE port map (start_stopp_old,start_stopp,clk,reset,'0');

FDCPE_visningslage_s: FDCPE port map (visningslage_s,visningslage,clk,'0','0');

Register Legend:
 FDCPE (Q,D,C,CLR,PRE); 
 FTCPE (Q,D,C,CLR,PRE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9572-7-PC44


   --------------------------------  
  /6  5  4  3  2  1  44 43 42 41 40 \
 | 7                             39 | 
 | 8                             38 | 
 | 9                             37 | 
 | 10                            36 | 
 | 11         XC9572-7-PC44      35 | 
 | 12                            34 | 
 | 13                            33 | 
 | 14                            32 | 
 | 15                            31 | 
 | 16                            30 | 
 | 17                            29 | 
 \ 18 19 20 21 22 23 24 25 26 27 28 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 digit<0>                         23 GND                           
  2 muxfrekvens                      24 digit<7>                      
  3 TIE                              25 TIE                           
  4 digit<2>                         26 visningslage                  
  5 clk                              27 TIE                           
  6 TIE                              28 raknar                        
  7 TIE                              29 TIE                           
  8 digit<4>                         30 TDO                           
  9 TIE                              31 GND                           
 10 GND                              32 VCC                           
 11 start_stopp                      33 TIE                           
 12 digit<1>                         34 TIE                           
 13 TIE                              35 digit<5>                      
 14 TIE                              36 nollstallning                 
 15 TDI                              37 TIE                           
 16 TMS                              38 digit<6>                      
 17 TCK                              39 reset                         
 18 display<1>                       40 TIE                           
 19 TIE                              41 VCC                           
 20 hundradelspuls                   42 TIE                           
 21 VCC                              43 digit<3>                      
 22 TIE                              44 display<0>                    


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc9572-7-PC44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
FASTConnect/UIM optimzation                 : ON
Local Feedback                              : ON
Pin Feedback                                : ON
Input Limit                                 : 36
Pterm Limit                                 : 25
</pre>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
